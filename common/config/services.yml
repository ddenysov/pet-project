services:
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  Common\Application\:
    resource: '../src/Application/'

  Common\Delivery\:
    resource: '../src/Delivery/'

  Common\Domain\:
    resource: '../src/Domain/'

  Common\Infrastructure\:
    resource: '../src/Infrastructure/'

  # QUERY BUS
  Common\Application\Bus\Port\QueryBus:
    class: Common\Infrastructure\Bus\Query\QueryBus

  # COMMAND BUS
  Common\Application\Bus\Port\CommandBus:
    class: Common\Infrastructure\Bus\Command\CommandBus

  # EVENT BUS
  Common\Application\Bus\Port\EventBus:
    class: Common\Infrastructure\Bus\Event\EventBus

  # EXCEPTION LISTENER
  Common\Infrastructure\Exception\Symfony\ExceptionListener:
    tags:
      - { name: kernel.event_listener, event: kernel.exception }

  # SERVICE CONTAINER
  Common\Application\Container\Port\ServiceContainer:
    class: Common\Infrastructure\Container\Symfony\ServiceContainer
    arguments:
      $container: '@service_container'

  # EVENT STORE
  Common\Application\EventStore\Port\EventStore:
    class: Common\Infrastructure\EventStore\Doctrine\EventStore

  # OUTBOX
  Common\Application\Outbox\Port\Outbox:
    class: Common\Application\Outbox\Outbox

  # OUTBOX REPOSITORY
  Common\Application\Outbox\Port\OutboxRepository:
    class: Common\Infrastructure\Outbox\Doctrine\OutboxRepository

  # TOKEN ENCODER
  Common\Application\Auth\Port\TokenEncoder:
    class: Common\Infrastructure\Auth\Firebase\TokenEncoder

  # TOKEN DECODER
  Common\Application\Auth\Port\TokenDecoder:
    class: Common\Infrastructure\Auth\Firebase\TokenDecoder

  # TRANSACTION MANAGER
  Common\Application\Handlers\Command\Port\TransactionManager:
    class: Common\Infrastructure\Persistence\Doctrine\Transaction\TransactionManager
    public: true

  # KAFKA PUBLISHER
  Common\Application\EventHandler\Port\EventPublisher:
    class: Common\Infrastructure\EventHandler\Kafka\EventPublisher
    public: true

  # KAFKA CONSUMER
  Common\Application\EventHandler\Port\EventConsumer:
    class: Common\Infrastructure\EventHandler\Kafka\EventConsumer
    public: true

  # OUTBOX PROCESSOR
  Common\Delivery\Schedule\Outbox\ProcessOutboxHandler:
    tags:
      - { name: 'messenger.message_handler', bus: 'messenger.bus.default' }

  # SCHEDULER
  Common\Delivery\Schedule\ScheduleProvider:
    tags:
      - scheduler.schedule_provider: { name: 'default' }

  monolog.formatter.session_request:
    class: Monolog\Formatter\LineFormatter
    arguments:
      - "[%%datetime%%] [%%extra.env%%] %%channel%%.%%level_name%%: %%message%% %%context%% %%extra%%\n"

  Common\Infrastructure\Log\Monolog\EnvProcessor:
    tags:
      - { name: monolog.processor }