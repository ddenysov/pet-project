<?php

declare(strict_types=1);

namespace Zinc\Core\Command\Middleware;

use Zinc\Core\Command\Command as C;
use Zinc\Core\DataStore\DataStore;

class TransactionalMiddleware extends AbstractCommandHandlerMiddleware implements CommandHandlerMiddleware
{
    /**
     * @var CommandHandlerMiddleware[]
     */
    private array $middlewares;

    public function __construct(
        private DataStore $dataStore,
        CommandHandlerMiddleware ...$middlewares,
    ) {
        $this->middlewares = $middlewares;
    }

    #[\Override]
    public function after(C $command, mixed $result): mixed
    {
        $this->dataStore->transactional(function () use ($result, $command): void {
            foreach ($this->middlewares as $middleware) {
                $middleware->after($command, $result);
            }
        });

        return parent::after($command, $result); // TODO: Change the autogenerated stub
    }
}
